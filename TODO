mute: que pasa?

TEST:
swap
cache stresstest

test beaglebone
shutdown stuff
transport: recv buffer and send vector

LEADER SOLVED
leader leaving solution:
already present nodes just start a new election
problem: node registered but currently searching
no problem, next node coming becomes leader

BEAGLEBONE PROBLEMS
leader in midst of operation, other node sends message, message lost
do we need to do asynchronous to fix this? just go into receive mode and let fifo handle it

backoff: transfer mode asynchronous? -> backoff broken

SWAP PROBLEMS
if we only adjust old when we swap we will never attempt to swap down

if we do it always we always get a ratio 1 (bc old always == current)
but we are able to swap down

swap down: node joins and goes to child to trigger swap from parent, node tries to register and catches old leaders swap request, node thinks it lost election
solution: when node leaves down, leader must wait before attempting the swap, todo
How? 
1. set timer last node left, check before swapping down (extra timestamp in state)
2. only do balance stuff when our score changes + timeout (timeout outside of balance)
3. after node leaves we wait a timeout before continueing (would lose messages?)

Important: split should not trigger a swap

SWAP SOLVED
swap problem: with empty parent frequencies we may end up with big detached subtrees
solution: if on swapping up nobody answers, we split towards the parent
like this we also distribute our load upwards and it eventually meets up with the top 

FAILURE TOLERANCE
leader does not answer join request, timeout and try again
